1077. Project Employees III
Medium

-- Schema
Create table If Not Exists Project (project_id int, employee_id int);
Create table If Not Exists Employee (employee_id int, name varchar(10), experience_years int);
Truncate table Project;
insert into Project (project_id, employee_id) values ('1', '1');
insert into Project (project_id, employee_id) values ('1', '2');
insert into Project (project_id, employee_id) values ('1', '3');
insert into Project (project_id, employee_id) values ('2', '1');
insert into Project (project_id, employee_id) values ('2', '4');
Truncate table Employee;
insert into Employee (employee_id, name, experience_years) values ('1', 'Khaled', '3');
insert into Employee (employee_id, name, experience_years) values ('2', 'Ali', '2');
insert into Employee (employee_id, name, experience_years) values ('3', 'John', '3');
insert into Employee (employee_id, name, experience_years) values ('4', 'Doe', '2');

-- Problem Description
Table: Project

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| project_id  | int     |
| employee_id | int     |
+-------------+---------+
(project_id, employee_id) is the primary key of this table.
employee_id is a foreign key to Employee table.
Each row of this table indicates that the employee with employee_id is working on the project with project_id.
 

Table: Employee

+------------------+---------+
| Column Name      | Type    |
+------------------+---------+
| employee_id      | int     |
| name             | varchar |
| experience_years | int     |
+------------------+---------+
employee_id is the primary key of this table.
Each row of this table contains information about one employee.
 

Write an SQL query that reports the most experienced employees in each project. In case of a tie, report all employees with the maximum number of experience years.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Project table:
+-------------+-------------+
| project_id  | employee_id |
+-------------+-------------+
| 1           | 1           |
| 1           | 2           |
| 1           | 3           |
| 2           | 1           |
| 2           | 4           |
+-------------+-------------+
Employee table:
+-------------+--------+------------------+
| employee_id | name   | experience_years |
+-------------+--------+------------------+
| 1           | Khaled | 3                |
| 2           | Ali    | 2                |
| 3           | John   | 3                |
| 4           | Doe    | 2                |
+-------------+--------+------------------+
Output: 
+-------------+---------------+
| project_id  | employee_id   |
+-------------+---------------+
| 1           | 1             |
| 1           | 3             |
| 2           | 1             |
+-------------+---------------+
Explanation: Both employees with id 1 and 3 have the most experience among the employees of the first project. For the second project, the employee with id 1 has the most experience.


-- Solution 1
-- Code Author Naveen Kumar Vadlamudi

SELECT
A.PROJECT_ID,
A.EMPLOYEE_ID
FROM
(
SELECT 
P.PROJECT_ID,
E.EMPLOYEE_ID,
DENSE_RANK() OVER(PARTITION BY P.PROJECT_ID ORDER BY E.EXPERIENCE_YEARS DESC) AS CRANK
FROM PROJECT AS P JOIN EMPLOYEE AS E
ON P.EMPLOYEE_ID = E.EMPLOYEE_ID 
) AS A
WHERE A.CRANK = 1

-- Solution 2
-- Code Author Naveen Kumar Vadlamudi
-- Added on December 05 2022 23:48 MDT

WITH CTE AS 
(
SELECT 
P.PROJECT_ID, E.EMPLOYEE_ID, E.NAME,E.EXPERIENCE_YEARS
FROM PROJECT AS P JOIN EMPLOYEE AS E
ON P.EMPLOYEE_ID = E.EMPLOYEE_ID
)

SELECT 
PROJECT_ID, EMPLOYEE_ID
FROM CTE 
WHERE (PROJECT_ID, EXPERIENCE_YEARS) IN 
(
        SELECT PROJECT_ID, MAX(EXPERIENCE_YEARS) 
        FROM CTE
        GROUP BY PROJECT_ID 
)    